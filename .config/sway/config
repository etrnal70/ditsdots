# Sway Config

# Defaults
## Key Modifier
set $mod Mod1

## Home row direction keys
set $left h
set $down j
set $up k
set $right l

## Terminal Emulator
set $term footclient

## Wallpaper
output * bg ~/Data/wallpaper/abstract.jpg fill

# Key Bindings
## Mandatory Keybinds
### Start a terminal
bindsym $mod+Return exec $term

### Kill focused window
bindsym $mod+q kill

### Desktop launcher
bindsym $mod+d exec (pgrep "fuzzel" 1>/dev/null 2>&1 && killall fuzzel) || fuzzel -F name

### Floating Modifier
floating_modifier $mod normal

### Reload sway
bindsym $mod+Shift+c reload

### Exit sway
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

## App-specific Keybinds
### Scripts Launcher
bindsym $mod+period exec ~/.scripts/dmenu_toggle.sh

### Execute Command
# TODO Switch to fuzzel
bindsym $mod+comma exec (pgrep "rofi" 1>/dev/null 2>&1 && killall rofi) || rofi -show run -config ~/.config/rofi/run.rasi

### Dunst
bindsym $mod+backslash exec swaync-client -d
bindsym $mod+bar exec swaync-client -C

### Waybar
bindsym $mod+w exec swaymsg bar mode toggle
# bindsym $mod+Shift+w exec pidof waybar | xargs kill -SIGUSR2

## Movement Keybinds
### Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

### Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

## Workspaces
### Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+p workspace p
bindsym $mod+o workspace o
bindsym $mod+i workspace i

### Move current workspace to output
bindsym $mod+Control+Shift+$up move workspace to output up
bindsym $mod+Control+Shift+$right move workspace to output right
bindsym $mod+Control+Shift+$left move workspace to output left
bindsym $mod+Control+Shift+$down move workspace to output down

### Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
bindsym $mod+Shift+p move container to workspace p
bindsym $mod+Shift+o move container to workspace o
bindsym $mod+Shift+i move container to workspace i

### Switch back and forth
bindsym $mod+Tab workspace back_and_forth

## Layout Keybinds
### Split
# bindsym $mod+b splith
# bindsym $mod+v splitv

### Make the current focus fullscreen
bindsym $mod+f fullscreen

### Toggle tiling - floating window
bindsym $mod+Shift+space floating toggle

### Make floating window sticky to all workspace
bindsym $mod+s sticky toggle

### Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

### Move focus to the parent container
bindsym $mod+a focus parent

## Focus to urgent window
bindsym $mod+x [urgent=latest] focus

### Scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

## Hardware Keybinds
### Generic Hardware Button
bindsym --locked XF86AudioRaiseVolume exec ~/.scripts/volume.sh up
bindsym --locked XF86AudioLowerVolume exec ~/.scripts/volume.sh down
bindsym --locked XF86AudioMute exec ~/.scripts/volume.sh mute
bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym --locked XF86AudioPlay exec playerctl -p spotify play-pause
bindsym --locked XF86AudioNext exec playerctl -p spotify next
bindsym --locked XF86AudioPrev exec playerctl -p spotify previous
bindsym --locked XF86MonBrightnessUp exec ~/.scripts/backlight.sh up
bindsym --locked XF86MonBrightnessDown exec ~/.scripts/backlight.sh down

### Alternative
bindsym $mod+Mod4+7 exec playerctl -p spotify previous
bindsym $mod+Mod4+8 exec playerctl -p spotify play-pause
bindsym $mod+Mod4+9 exec playerctl -p spotify next
bindsym $mod+Mod4+0 exec ~/.scripts/volume.sh down
bindsym $mod+Mod4+minus exec ~/.scripts/volume.sh mute
bindsym $mod+Mod4+equal exec ~/.scripts/volume.sh up

### Arrow Keys
bindsym --locked $mod+Mod4+Left exec playerctl -p spotify previous
bindsym --locked $mod+Mod4+Right exec playerctl -p spotify next
bindsym --locked $mod+Mod4+Down exec ~/.scripts/volume.sh down
bindsym --locked $mod+Mod4+Up exec ~/.scripts/volume.sh up

## Container Keybinds
### Resize
mode "resize_containers" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize_containers"

# Additional Settings
## Idle Configuration
exec swayidle -w \
         timeout 900 'swaylock -f -F -e' \
         timeout 1200 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         timeout 1800 'systemctl suspend' \
         before-sleep 'swaylock -f -F -e && playerctl pause'

## XWayland
xwayland enable

## Mouse
focus_follows_mouse no
mouse_warping none

## Clamshell mode
### Set variable
set $laptop_screen 'eDP-1'
### Set sleep script
set $sleep sleep 3 && systemctl suspend
### Assign with lid detection
bindswitch --reload --locked lid:on exec "[$(swaymsg -t get_outputs | grep name | wc -l) == 1] && ($sleep) || (notify-send 'Clamshell Mode' 'Laptop screen off' && swaymsg output $laptop_screen disable)"
bindswitch --reload --locked lid:off output $laptop_screen enable

# Bar
bar {
  swaybar_command waybar
  position bottom
  hidden_state hide
  mode dock
}

# Startup
## Start session target
# exec "systemctl --user import-environment; systemctl --user start sway-session.target"
exec "systemctl --user import-environment \
DISPLAY SWAYSOCK WAYLAND_DISPLAY \
XDG_CURRENT_DESKTOP XDG_SESSION_DESKTOP XDG_SESSION_TYPE \
GTK_THEME XCURSOR_THEME XCURSOR_SIZE SSH_AUTH_SOCK \
MOZ_ENABLE_WAYLAND MOZ_USE_XINPUT2 MOZ_DBUS_REMOTE \
CLUTTER_BACKEND SAL_USE_VCLPLUGIN \
QT_AUTO_SCREEN_SCALE_FACTOR QT_QPA_PLATFORM QT_QPA_PLATFORMTHEME QT_WAYLAND_DISABLE_WINDOWDECORATION \
_JAVA_AWT_WM_NONPARENTING \
ELM_ENGINE ECORE_EVAS_ENGINE \
SDL_VIDEODRIVER NO_AT_BRIDGE; \
systemctl --user start sway-session.target"

## Assign cgroups
exec /usr/local/bin/assign-cgroups.py

## Import GTK configuration
exec_always ~/.scripts/import-gsettings

## Trigger kanshi
exec "systemctl --user restart kanshi"

###########################
include /etc/sway/config.d/*
include ~/.config/sway/*
